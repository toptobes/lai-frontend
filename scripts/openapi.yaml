openapi: 3.1.0
info:
  title: Lindauer AI Gyro Docs
  x-logo:
    url: 'https://lindauerai.com/images/lindauer_ai_dark_logo_full.svg'
    backgroundColor: '#161719'

  description: |-
    # Getting Started
    
    Gyro is the premiere educational chatbot. Students will use chatbots regardless of whether you block them, so we decided to make the highest performing and most responsible AI system, ever.
    
    These are the docs to both the internal and external Gyro API. Before we get started, let's explain what these different tags are.
    
    ## Internal
    
    Internal API calls are for use with the Gyro website. These are the calls that the website makes to the backend to perform actions.
    These are not meant to be used by the user, but rather by the website.
    Though if you feel like making a better version of our website, by all means, use these endpoints (contact us too at support@lindauerai.com / careers@lindauerai.com)!
    
    ### User
    These are the calls that the user makes to the backend to perform actions.
    By `user` we mean a student or teacher, not an institution.
    However, a student can only access `user` and not `teacher` endpoints.
    
    
    ### Institution
    These are the calls that the institution makes to the backend to perform actions within the website.
    They include getting the institution dashboard statistics, creating API keys, and maybe more in the future.
    
    ### Teacher
    
    These are the calls that the teacher makes to the backend to perform actions within the website.
    Currently, this is only for classification, but in the future, it may include more.
    
    
    ### Site
    
    These are the calls that the website makes to the backend to perform actions within the website, *without* a user account.
    
    
    ### Admin
    
    These endpoints are for Lindauer AI employees only. They are used to see statistics about the backend, and to perform actions that are not anyone else.
    
    
    ## External
    
    External API calls are for use with API keys. These are the calls that the API key makes to the backend to perform actions.
    
    ### Institution
    These are the calls that the institution makes to the backend to perform actions. There are no other types of external endpoints.
    
    
    
    Happy coding!
    
    - The Lindauer AI Team

  termsOfService: https://lindauerai.com/terms.html/
  contact:
    email: support@lindauerai.com
  version: 1.0.2
servers:
  - url: https://www.api.lindauerai.com
    description: Production server that points to `https://gyro-405519.uc.r.appspot.com`
  - url: http://localhost:5010
    description: Local server for testing
tags:
  - name: internal/user
    description: Internal documentation about API calls for user functionality.
  - name: internal/institution
    description: Internal API calls for handling institution accounts
  - name: internal/teacher
    description: Internal API calls for handling teacher accounts (aka Gyro classification calls)
  - name: internal/site
    description: External API calls for use with the Gyro website.
  - name: internal/admin
    description: Internal API calls for Lindauer AI employees only.
  - name: external/institution
    description: External API calls for use with API keys.


paths:
  /internal/user/:
    post:
      tags:
        - internal/user
      summary: Create a user.
      description: Creates a user with the given authentication information pulled from the identity provider and a gender variable.

      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/GenderSchema'
            examples:
              Example1:
                value:
                  gender: "female"

      responses:
        '201':
          description: Entity created successfully.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/CreatedEntity'

              example:
                name: 'George Washington'
                email: 'g.w@presidents.gov'
                gender: 'female'
                institution_name: 'Lindauer AI'
                created_at: '2021-10-22 18:00:00.000 UTC'
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Entity oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
    get:
      tags:
        - internal/user
      summary: Get an entity's basic data.
      description: Gets `name` and `role`, the basic informmation of the user/institution (institution role will be `institution`).

      parameters:
        - name: Authorization
          in: header
          description: Entity's ID token. Always required.
          required: true
          schema:
            type: string


      responses:
        '200':
          description: Entity fetched successfully.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/EntityCreationResult'
              example:
                name: 'George Washington'
                institution_name: 'Martian University'
                role: 'user-basic'
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Entity oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/user/profile/:
    get:
      tags:
        - internal/user
      summary: Get an entity's profile.
      description: Gets `name`, `email`, `gender`, and `created_at` date of the user/institution (institution gender will be `x`).

      parameters:
        - name: Authorization
          in: header
          description: Entity's ID token. Always required.
          required: true
          schema:
            type: string


      responses:
        '200':
          description: User profile fetched successfully.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/FetchProfile'
              example:
                name: 'George Washington'
                email: 'g.w@presidents.gov'
                gender: 'female'
                created_at: '2021-10-22 18:00:00.000 UTC'
                role: 'user-basic'
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Entity oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
    put:
      tags:
        - internal/user
      summary: Edit user profile.
      description: Edit a user's profile information. If not changing all the fields, just pass the old values in for the fields that stay the same.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/UserProfileEdit'
            examples:
              Example1:
                value:
                  new_name: 'Bill Stevens'
                  new_gender: "x"
      responses:
        '200':
          description: User edited successfully.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/gyro/conversations/new/:
    post:
      tags:
        - internal/user
      summary: Create conversation.
      description: Create a conversation with Gyro for a specific user.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/ConversationName'
            examples:
              Example1:
                value:
                  conversation_name: 'Math Help'

      responses:
        '201':
          description: Conversation created successfully.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ConversationReturn'
              example:
                conversation_id: '3bb98b1f-a1c4-4b6f-bbb2-45cf48b7c33c'
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have a Gyro plan or is an institution.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/gyro/conversations/{conversation_id}/:
    put:
      tags:
        - internal/user
      summary: Rename conversation.
      description: Rename an existing conversation to something else.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string
        - name: conversation_id
          in: path
          description: UUID of the conversation to ask the message in.
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/NewConversationName'
            examples:
              Example 1:
                value:
                  message: 'Chemistry work'
      responses:
        '200':
          description: Conversation renamed successfully.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have a gyro plan or is an institution.
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Conversation does not exist.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
    delete:
      tags:
        - internal/user
      summary: Delete conversation.
      description: Delete an existing conversation.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string
        - name: conversation_id
          in: path
          description: UUID of the conversation to ask the message in.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Conversation deleted successfully.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have a gyro plan or is an institution.
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Conversation does not exist.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/gyro/conversations/:
    get:
      tags:
        - internal/user
      summary: Get conversations.
      description: Get a list of conversations for a user, sorted by last used timestamp. This is used to populate the conversation list on the frontend.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Conversations fetched successfully.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/FetchConvos'
              example:
                conversations:
                  - conversation_id: "3bb98b1f-a1c4-4b6f-bbb2-45cf48b7c33c"
                    name: "Math Help"
                    last_used: "2022-10-22 18:00:00.000 UTC"
                  - conversation_id: "9cb98b1f-a1c4-4b6f-bbb2-45cf48b7c33c"
                    name: "Music Theory"
                    last_used: "2023-09-27 18:00:00.000 UTC"
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have appropriate credentials.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/gyro/documents/{conversation_id}/:
    post:
      tags:
        - internal/user
      summary: Upload document.
      description: Upload text as a document to perform queries on.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string
        - name: conversation_id
          in: path
          description: UUID of the conversation as a string.
          required: true
          schema:
            type: string

      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/UploadDocument'
            examples:
              Example 1:
                value:
                  source_name: "textbook.txt"

      responses:
        '200':
          description: Document uploaded successfully.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/UploadDocumentReturn'
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have a Gyro plan or is an institution.
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Conversation does not exist.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
    get:
      tags:
        - internal/user
      summary: List documents.
      description: Get a list of documents for a user. This is used to populate the document list on the frontend and allow users to see what documents are being referred to in a conversation.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string
        - name: conversation_id
          in: path
          description: Conversation ID to list documents from.
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Documents fetched successfully.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/FetchDocs'
              example:
                documents:
                  - source_name: "math_textbook_1.pdf"
                    id: "3bb98b1f-a1c4-4b6f-bbb2-45cf48b7c33c"
                    file_size: 17
                    download_link: 'https://storage.googleapis.com/gyro-storage/3bb98b1f-a1c4-4b6f-bbb2-45cf48b7c33c/math_textbook_1.pdf'
                  - source_name: "math_textbook_2.pdf"
                    id: "9cd98b1f-a1c4-4b6f-bbb2-45cf48b7c33c"
                    file_size: 25
                    download_link: 'https://storage.googleapis.com/gyro-storage/3bb98b1f-a1c4-4b6f-bbb2-45cf48b7c33c/math_textbook_2.pdf'
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have appropriate credentials.
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Conversation does not exist.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/user/documents/{conversation_id}/{source_id}/:
    delete:
      tags:
        - internal/user
      summary: Delete a document.
      description: Delete a document from a conversation and vectorstore.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string
        - name: conversation_id
          in: path
          description: UUID of the conversation to ask the message in.
          required: true
          schema:
            type: string
        - name: source_id
          in: path
          description: ID of the source to delete.
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Document deleted successfully.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have appropriate credentials (i.e. institution).
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Conversation does not exist.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/gyro/conversations/{conversation_id}/messages/{message_id}/:
    delete:
      tags:
        - internal/user
      summary: Delete a message.
      description: Delete a message from the message history.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string
        - name: conversation_id
          in: path
          description: UUID of the conversation to delete a message in.
          required: true
          schema:
            type: string
        - name: message_id
          in: path
          description: Message UUID.
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Message deleted successfully.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User is not a regular user (i.e. institution).
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Conversation does not exist.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'

  /internal/gyro/conversations/{conversation_id}/messages/:
    get:
      tags:
        - internal/user
      summary: Get messages.
      description: Get a list of messages and their metadata for a user. This is used to populate the message list on the frontend and allow users to see what messages are in a conversation.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string
        - name: conversation_id
          in: path
          description: Conversation ID to list documents from.
          required: true
          schema:
            type: string

      responses:
        '200':
          description: List of messages
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ListMessages'
              example:
                messages:
                  - id: "6fff9ba7-3e74-4fd9-bc79-617f422e5877"
                    body: "Hello, how are you?"
                    role: "human"
                    created: "2023-12-11T14:30:00Z"
                    category: "other"
                    cheat_guess: 0.443
                    sources: []
                  - id: "defed0bf-5a43-426c-8367-dd97891f59ea"
                    body: "I'm doing well, thanks!"
                    role: "ai"
                    created: "2023-12-11T14:35:00Z"
                    category: "humanities"
                    cheat_guess: 0.122
                    sources: []
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have appropriate credentials.
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Conversation does not exist.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/gyro/conversations/{conversation_id}/messages/stream/:
    post:
      tags:
        - internal/user
      summary: Send a message.
      description: Sends a message. The stream SSE will be returned. The first response will be a string of the list of sources (ex. `["source1.pdf", "source2.pdf"]`). The second response will be a string of the list of what's in the sources (ex. `["source 1 text blah blah", "source 2 text blah"]`. All subsequent responses is the stream for Gyro's response.)
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string
        - name: conversation_id
          in: path
          description: UUID of the conversation to ask the message in.
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/SendMessage'

            examples:
              Example 1:
                value:
                  message: "How can I calculate sin(2*pi)?"

      responses:
        '200':
          description: Stream created successfully.
          content:
            text/event-stream:
              schema:
                type: string
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have a Gyro plan or is an institution.
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Conversation does not exist.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/gyro/conversations/{conversation_id}/messages/{message_id}/stream/:
    put:
      tags:
        - internal/user
      summary: Edit a message.
      description: Deletes a message, and sends a new one. The stream SSE will be returned.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string
        - name: conversation_id
          in: path
          description: UUID of the conversation to ask the message in.
          required: true
          schema:
            type: string
        - name: message_id
          in: path
          description: UUID of the message to edit.
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/SendMessage'

            examples:
              Example 1:
                value:
                  message: "How can I calculate sin(2*pi)?"

      responses:
        '200':
          description: Stream created successfully.
          content:
            text/event-stream:
              schema:
                type: string
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have a Gyro plan or is an institution.
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Conversation does not exist.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/gyro/user/plan/verify/:
    post:
      tags:
        - internal/user
      summary: Verify plan purchase.
      description: Sets a user's account to have access to Gyro after Stripe payment.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string
        - name: Payment-Token
          in: header
          description: Confirmation token from Stripe to validate purchase.
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/VerifySet'
            examples:
              Example 1:
                value:
                  plan: 'basic'

      responses:
        '200':
          description: Purchase verified and account variable set.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User has incorrect permissions (i.e. institution account type) or an invalid payment token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: User has incorrect permissions.
              example:
                error: User has incorrect permissions (i.e. institution account type) or an invalid payment token.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/gyro/gtky/chat/stream/:
    post:
      tags:
        - internal/user
      summary: Get-to-know-you chat.
      description: Sends a message to the get-to-know-you bot. The stream SSE will be returned. Gyro will first ask the user something, so you should send an empty message first to get the streamed response. When a blank message is sent and it is at least a day later than the last get-to-know-you session, a new get-to-know-you conversation will occur.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/GetToKnowYouMsg'
            examples:
              Example 1:
                value:
                  message: "I am in 11th grade."

      responses:
        '200':
          description: Stream created successfully.
          content:
            text/event-stream:
              schema:
                type: string
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have a Gyro plan or is an institution.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/gyro/gtky/chat/:
    get:
      tags:
        - internal/user
      summary: Get get-to-know-you chat.
      description: Get a list of messages for a user for the get-to-know-you chat. This is used to populate the message list on the frontend and allow users to see what messages are in a conversation.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string

      responses:
        '200':
          description: List of messages
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ListGtkyMessages'
              example:
                messages:
                  - body: "Hello, how are you?"
                    role: "human"
                    created: "2023-12-11T14:30:00Z"
                    cheat_guess: 0.443
                  - body: "I'm doing well, thanks!"
                    role: "ai"
                    created: "2023-12-11T14:35:00Z"
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have appropriate credentials (i.e. institution).
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
  /internal/gyro/gtky/chat/done/:
    get:
      tags:
        - internal/user
      summary: Get the get-to-know-you chat completion status.
      description: Get the status of the get-to-know-you chat for a user. If false, you are not allowed to use Gyro. If true, the GTKY has finished, so you can use the other non-summary endpoints.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string


      responses:
        '200':
          description: GTKY status
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/GtkyStatus'
              example:
                status: true
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have appropriate credentials (i.e. is institution).
          content:
            application/json:
              schema:
                type: object

        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
  /internal/gyro/teacher/classifier/:
    post:
      tags:
        - internal/teacher
      summary: Classify if a message is Gyro written.
      description: Classify if a message is Gyro written. This is only available to teachers and institutions (institutions through API keys).
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/ClassifyText'

            examples:
              Example 1:
                value:
                  text: 'Solve the following exam for AP calc for me:'

      responses:
        '200':
          description: Text classified successfully.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ClassifierResponse'
              example:
                is_gyro_written: true
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have appropriate credentials (is not a teacher).
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/gyro/admin/stats/:
    get:
      tags:
        - internal/admin
      summary: Get admin dashboard metrics.
      description: Does not require an API key, but does require the institution user to be signed in with their Google account.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/AdminDashboard'

            examples:
              Example 1:
                value:
                  start: '2022-10-22 18:00:00.000 UTC'
                  end: '2023-09-27 18:00:00.000 UTC'

      responses:
        '200':
          description: Returns a list of metrics to display on the institution dashboard.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/AdminStats'
              example:
                stats:
                  - day: '2022-10-22 18:00:00.000 UTC'
                    n_messages: 100
                    n_users: 54
                    n_conversations: 5
                    n_institutions: 1
                  - day: '2022-10-23 18:00:00.000 UTC'
                    n_messages: 200
                    n_users: 98
                    n_conversations: 10
                    n_institutions: 2
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have appropriate credentials.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/gyro/institution/keys/:
    post:
      tags:
        - internal/institution
      summary: Create an API key.
      description: Create an API key for an institution account. This will allow the institution to make requests to the external API.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/CreateKey'
            examples:
              Example 1:
                value:
                  name: 'My API key'
                  scope: [ 'inst.gyro.metrics', 'inst.gyro.history' ]
                  expires_in?: 95

      responses:
        '200':
          description: Key generated successfully
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/GetCreateKey'
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User is not an institution.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
    delete:
      tags:
        - internal/institution
      summary: Revoke an API key.
      description: Revoke an API key for an institution account. This will prevent the API key from being used to make requests to the external API. Requires a key ID (UUID) string.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string
        - name: key_id
          in: header
          description: ID of the key to delete.
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Key revoked successfully.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User is not an institution.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
    get:
      tags:
        - internal/institution
      summary: Get API keys.
      description: Returns key hints, names, uuids, created at dates, last used dates, and expiration dates.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string

      responses:
        '200':
          description: API keys fetched successfully.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ApiKeys'

              example:
                keys:
                  - key_id: '3bb98b1f-a1c4-4b6f-bbb2-45cf48b7c33c'
                    key_hint: '9db33a...'
                    name: 'My API key'
                    created_at: '2021-10-22 18:00:00.000 UTC'
                    last_used: '2022-10-22 18:00:00.000 UTC'
                    expires_at: '2023-10-22 18:00:00.000 UTC'
                    scope: [ 'inst.gyro.metrics', 'inst.gyro.history' ]
                  - key_id: '7bb98b1f-a1c4-4b6f-bbb2-45cf48b7c33c'
                    key_hint: '9db33a...'
                    name: 'Key 2'
                    created_at: '2021-10-22 18:00:00.000 UTC'
                    last_used: '2022-10-22 18:00:00.000 UTC'
                    expires_at: '2023-10-22 18:00:00.000 UTC'
                    scope: [ 'inst.gyro.metrics', 'inst.gyro.history', 'inst.gyro.classifier' ]
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have appropriate credentials.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/gyro/institution/metrics/:
    get:
      tags:
        - internal/institution
      summary: Get dashboard metrics
      description: Does not require an API key, but does require the institution user to be signed in with their Google account.
      parameters:
        - name: Authorization
          in: header
          description: User's ID token. Always required.
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/GetDashboardMetrics'
            examples:
              Example 1:
                value:
                  start: '2022-10-22 18:00:00.000 UTC'
                  end: '2023-09-27 18:00:00.000 UTC'

      responses:
        '200':
          description: Returns a list of metrics to display on the institution dashboard.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/Stats'
              example:
                - day: '2022-10-22 18:00:00.000 UTC'
                  n_users: 1
                  n_humanities_messages: 1
                  n_humanities_cheating_messages: 1
                  n_natural_sciences_messages: 1
                  n_natural_sciences_cheating_messages: 1
                  n_social_sciences_messages: 1
                  n_social_sciences_cheating_messages: 1
                  n_mathematics_messages: 1
                  n_mathematics_cheating_messages: 1
                  n_professional_messages: 1
                  n_professional_cheating_messages: 1
                  n_other_messages: 1
                  n_other_cheating_messages: 1
                - day: '2022-11-23 18:00:00.000 UTC'
                  n_users: 35
                  n_humanities_messages: 21
                  n_humanities_cheating_messages: 2
                  n_natural_sciences_messages: 98
                  n_natural_sciences_cheating_messages: 2
                  n_social_sciences_messages: 2
                  n_social_sciences_cheating_messages: 2
                  n_mathematics_messages: 0
                  n_mathematics_cheating_messages: 2
                  n_professional_messages: 87
                  n_professional_cheating_messages: 2
                  n_other_messages: 5
                  n_other_cheating_messages: 2
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have appropriate credentials.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/careers/:
    get:
      tags:
        - internal/site
      summary: Get all career info for frontend.
      description: Does not require any parameters or authentication. Will be rate-limited by IP.

      responses:
        '200':
          description: Careers fetched successfully.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/Jobs'
              example:
                - id: 1
                  title_short: 'Software Engineer'
                  location: 'San Francisco, CA'
                - id: 2
                  title_short: 'Machine Learning Engineer'
                  location: 'New York, NY'
        '403':
          description: User is rate-limited
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/careers/{job_id}/:
    get:
      tags:
        - internal/site
      summary: Get a job's info.
      description: Uses the serial ID as a lookup to get job posting information.

      parameters:
        - name: job_id
          in: path
          description: Job ID.
          required: true
          schema:
            type: number

      responses:
        '200':
          description: Career fetched successfully.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/JobFine'
              example:
                job_id: 1
                title_short: 'Software Engineer'
                title_long: 'Important Software Engineer'
                location: 'San Francisco, CA'
                description: 'We are looking for a software engineer to join our team.'
                responsibilities: [ 'Write code', 'Test code', 'Deploy code' ]
                qualifications: [ 'Bachelors degree', '2 years of experience' ]
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User is rate-limited
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /internal/sales-info/:
    get:
      tags:
        - internal/site
      summary: Get current AI models.
      description: Gets a list of AI model names, descriptions, capabilities, and tips for the frontend.

      responses:
        '200':
          description: AI models fetched successfully.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/AIModels'
              example:
                models:
                  - name: 'Gyro-1000'
                    description: 'Our main AI model.'
                    capabilities: [ 'Can detect cheating', 'Can detect subject', 'Can detect message type' ]
                    tips: [ 'Use this model for most cases' ]
                  - name: 'Gyro-2000'
                    description: 'A heavier version of our main AI model.'
                    capabilities: [ 'Can detect cheating', 'Can detect subject' ]
                    tips: [ 'Use this model if you want the best experience but load fewer documents.' ]
        '403':
          description: User is rate-limited
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'

  /external/gyro/institution/query/:
    post:
      tags:
        - external/institution
      summary: Query user data.
      description: |
        Queries user data from a specific institution. Requires an API key with the `inst.gyro.history` scope. Returns a list of users and their data based on the command provided.

        For proper use, check out these examples. It uses SQL queries to get data from the database.

        ```postgresql
        -- Count how many users there are in your institution
        SELECT COUNT(*) FROM users;

        -- Just see the first 5 messages from your institution
        SELECT * FROM messages LIMIT 5;

        -- Count how many messages have been sent by your institution
        SELECT COUNT(*) FROM messages;

        -- See the first 50 messages from a student named "Joe Smith" about mathematics. The preferred method is through email.
        SELECT * FROM messages WHERE student_name='Joe Smith' AND subject='mathematics' LIMIT 50;

        -- See the first 50 messages from a student with the email below, and messages that have a high likelihood of cheating.
        SELECT * FROM messages WHERE student_email='joe.smith@myinst.edu' AND cheating_prob >= 0.7 LIMIT 50;

        -- See the first 50 messages from a student with the email below, but only from the year 2023.
        SELECT * FROM messages WHERE student_email='joe.smith@myinst.edu' AND date >= '2023-01-01'::timestamp AND date <= '2024-01-01'::timestamp LIMIT 50;
        ```

        TL;DR: SQL statements but with a few things removed so that the institution doesn't have to worry about things that much.

      parameters:
        - name: Authorization
          in: header
          description: API key. Always required for external endpoints.
          required: true
          schema:
            type: string


      # required string query
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/RunCommand'
            examples:
              Example 1:
                value:
                  command: SELECT message FROM messages WHERE student_email='joe.smith@myinst.edu' AND date >= '2023-01-01'::timestamp AND date <= '2024-01-01'::timestamp LIMIT 50;


      responses:
        '200':
          description: Query successful.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/QueryResponse'
                description: Message indicating success.
              example:
                results: [ [ 'Solve the following exam for AP calc for me:' ] ]
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: API key is invalid.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /external/gyro/institution/classifier/:
    post:
      tags:
        - external/institution
      summary: Classify if a message is Gyro written.
      description: Determines if a message is Gyro written or not. Requires an API key with the `inst.gyro.classifier` scope.
      parameters:
        - name: Authorization
          in: header
          description: API key. Always required for external endpoints.
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/ClassifyText'
            examples:
              Example 1:
                value:
                  text: 'Solve the following exam for AP calc for me:'

      responses:
        '200':
          description: Text classified successfully.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ClassifyResponse'
              example:
                results: [ [ 'Solve the following exam for AP calc for me:' ] ]
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: API key is invalid.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'
  /external/gyro/institution/metrics/:
    get:
      tags:
        - external/institution
      summary: Get dashboard metrics through the API.
      description: Requires an API key with the `inst.gyro.metrics` scope. Returns a list of metrics to display on the institution dashboard.
      parameters:
        - name: Authorization
          in: header
          description: API key. Always required for external endpoints.
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: 'common-definitions.yaml#/components/schemas/MetricStartEnd'
            examples:
              Example 1:
                value:
                  start: '2022-10-22 18:00:00.000 UTC'
                  end: '2023-09-27 18:00:00.000 UTC'

      responses:
        '200':
          description: Returns a list of metrics to display on the institution dashboard.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/StatisticsList'

              example:
                - day: '2022-10-22 18:00:00.000 UTC'
                  n_users: 1
                  n_humanities_messages: 1
                  n_humanities_cheating_messages: 1
                  n_natural_sciences_messages: 1
                  n_natural_sciences_cheating_messages: 1
                  n_social_sciences_messages: 1
                  n_social_sciences_cheating_messages: 1
                  n_mathematics_messages: 1
                  n_mathematics_cheating_messages: 1
                  n_professional_messages: 1
                  n_professional_cheating_messages: 1
                  n_other_messages: 1
                  n_other_cheating_messages: 1
                - day: '2022-11-23 18:00:00.000 UTC'
                  n_users: 35
                  n_humanities_messages: 21
                  n_humanities_cheating_messages: 2
                  n_natural_sciences_messages: 98
                  n_natural_sciences_cheating_messages: 2
                  n_social_sciences_messages: 2
                  n_social_sciences_cheating_messages: 2
                  n_mathematics_messages: 0
                  n_mathematics_cheating_messages: 2
                  n_professional_messages: 87
                  n_professional_cheating_messages: 2
                  n_other_messages: 5
                  n_other_cheating_messages: 2
        '400':
          description: Missing a passed parameter or body variable.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: User oauth credentials are incorrect.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: User does not have appropriate credentials.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: 'common-definitions.yaml#/components/schemas/ResponseError'
              example:
                error: 'TypeError: int object is not callable'